{"version":3,"sources":["../src/core.js"],"names":["debug","AlreadyLogoutError","message","constructor","__proto__","prototype","Error","WechatCore","data","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","COOKIE","user","botData","request","Request","Cookie","Promise","resolve","then","method","url","API_jsLogin","window","QRLogin","eval","res","assert","equal","code","catch","err","tips","params","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","fun","pm","console","log","headers","forEach","test","item","Date","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SYNCCHECK_RET_LOGOUT","SKey","updateSyncKey","Object","assign","User","MPSubscribeMsgList","to","pass_ticket","lang","API_webwxstatusnotify","seq","API_webwxgetcontact","contacts","length","API_webwxbatchgetcontact","ContactList","text","JSON","stringify","API_webwxreport","API_synccheck","synccheck","ex","retcode","selector","SYNCCHECK_RET_SUCCESS","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","redirect","type","API_webwxlogout","msg","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","file","filename","toUserName","name","size","ext","mediatype","reject","File","Blob","Buffer","isBuffer","mime","lookup","readable","path","basename","pipe","buffer","toLowerCase","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","FormData","append","toGMTString","encodeURI","contentType","knownLength","isStandardBrowserEnv","getHeaders","f","API_webwxuploadmedia","mediaId","ok","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","APPMSGTYPE_ATTACH","API_webwxsendappmsg","MsgType","Content","replace","SubMsgType","MSGTYPE_LOCATION","Type","OriContent","EmojiFlag","Scene","MSGTYPE_MICROVIDEO","MSGTYPE_APP","AppMsgType","msgId","MsgID","API_webwxgetmsgimg","responseType","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","Ticket","API_webwxverifyuser","content","NickName","Topic","MemberList","MemberCount","API_webwxcreatechatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","OP","RemarkName","CmdId","API_webwxoplog","NewName","NewTopic","SvrMsgId","ClientMsgId","API_webwxrevokemsg","Uin","parseInt","Sid","Skey","DeviceID","keys","key"],"mappings":"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","file":"core.js","sourcesContent":["import path from 'path'\r\nimport bl from 'bl'\r\nimport _debug from 'debug'\r\nimport FormData from 'form-data'\r\nimport mime from 'mime'\r\nimport {\r\n  getCONF,\r\n  Request,\r\n  isStandardBrowserEnv,\r\n  assert,\r\n  getClientMsgId,\r\n  getDeviceID\r\n} from './util'\r\n\r\nconst debug = _debug('core')\r\nexport class AlreadyLogoutError extends Error {\r\n  constructor (message = 'already logout') {\r\n    super(message)\r\n    // fuck the babel\r\n    this.constructor = AlreadyLogoutError\r\n    this.__proto__ = AlreadyLogoutError.prototype\r\n  }\r\n}\r\n\r\nexport default class WechatCore {\r\n  constructor (data) {\r\n    this.PROP = {\r\n      uuid: '',\r\n      uin: '',\r\n      sid: '',\r\n      skey: '',\r\n      passTicket: '',\r\n      formatedSyncKey: '',\r\n      webwxDataTicket: '',\r\n      syncKey: {\r\n        List: []\r\n      }\r\n    }\r\n    this.CONF = getCONF()\r\n    this.COOKIE = {}\r\n    this.user = {}\r\n    if (data) {\r\n      this.botData = data\r\n    }\r\n\r\n    this.request = new Request({\r\n      Cookie: this.COOKIE\r\n    })\r\n  }\r\n\r\n  get botData () {\r\n    return {\r\n      PROP: this.PROP,\r\n      CONF: this.CONF,\r\n      COOKIE: this.COOKIE,\r\n      user: this.user\r\n    }\r\n  }\r\n\r\n  set botData (data) {\r\n    Object.keys(data).forEach(key => {\r\n      Object.assign(this[key], data[key])\r\n    })\r\n  }\r\n\r\n  getUUID () {\r\n    return Promise.resolve().then(() => {\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_jsLogin\r\n      }).then(res => {\r\n        let window = {\r\n          QRLogin: {}\r\n        }\r\n        // res.data: \"window.QRLogin.code = xxx; ...\"\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n        assert.equal(window.QRLogin.code, 200, res)\r\n\r\n        this.PROP.uuid = window.QRLogin.uuid\r\n        return window.QRLogin.uuid\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取UUID失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  checkLogin () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'tip': 0,\r\n        'uuid': this.PROP.uuid,\r\n        'loginicon': true\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_login,\r\n        params: params\r\n      }).then(res => {\r\n        let window = {}\r\n\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n\r\n        assert.notEqual(window.code, 400, res)\r\n\r\n        if (window.code === 200) {\r\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\r\n          this.rediUri = window.redirect_uri\r\n        } else if (window.code === 201 && window.userAvatar) {\r\n          // this.user.userAvatar = window.userAvatar\r\n        }\r\n        return window\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取手机确认登录信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  login () {\r\n    return Promise.resolve().then(() => {\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.rediUri,\r\n        params: {\r\n          fun: 'new'\r\n        }\r\n      }).then(res => {\r\n        let pm = res.data.match(/<ret>(.*)<\\/ret>/)\r\n        if (pm && pm[1] === '0') {\r\n          this.PROP.skey = res.data.match(/<skey>(.*)<\\/skey>/)[1]\r\n          this.PROP.sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\r\n          this.PROP.uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\r\n          console.log(res.data, '登陆的时候会拥有')\r\n          this.PROP.passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\r\n        }\r\n        if (res.headers['set-cookie']) {\r\n          res.headers['set-cookie'].forEach(item => {\r\n            if (/webwx.*?data.*?ticket/i.test(item)) {\r\n              this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\r\n            } else if (/wxuin/i.test(item)) {\r\n              this.PROP.uin = item.match(/=(.*?);/)[1]\r\n            } else if (/wxsid/i.test(item)) {\r\n              this.PROP.sid = item.match(/=(.*?);/)[1]\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '登录失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  init () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'skey': this.PROP.skey,\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxinit,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\r\n          throw new AlreadyLogoutError()\r\n        }\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        this.PROP.skey = data.SKey || this.PROP.skey\r\n        this.updateSyncKey(data)\r\n        Object.assign(this.user, data.User)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '微信初始化失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getmpData () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'skey': this.PROP.skey,\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxinit,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        /* console.log(\r\n          data.MPSubscribeMsgList, '我想要的mp信息init'\r\n        ) */\r\n        return data.MPSubscribeMsgList\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '微信初始化失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  notifyMobile (to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket,\r\n        lang: 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Code': to ? 1 : 3,\r\n        'FromUserName': this.user['UserName'],\r\n        'ToUserName': to || this.user['UserName'],\r\n        'ClientMsgId': getClientMsgId()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxstatusnotify,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '手机状态通知失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getContact (seq = 0) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'lang': 'zh_CN',\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'seq': seq,\r\n        'skey': this.PROP.skey,\r\n        'r': +new Date()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxgetcontact,\r\n        params: params\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取通讯录失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  batchGetContact (contacts) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'type': 'ex',\r\n        'r': +new Date(),\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Count': contacts.length,\r\n        'List': contacts\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxbatchgetcontact,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        return data.ContactList\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '批量获取联系人失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  statReport (text) {\r\n    return Promise.resolve().then(() => {\r\n      text = text || {\r\n        'type': '[action-record]',\r\n        'data': {\r\n          'actions': [{\r\n            'type': 'click',\r\n            'action': '发送框',\r\n            'time': +new Date()\r\n          }]\r\n        }\r\n      }\r\n      text = JSON.stringify(text)\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'new',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Count': 1,\r\n        'List': [{\r\n          'Text': text,\r\n          'Type': 1\r\n        }]\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxreport,\r\n        params: params,\r\n        data: data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '状态报告失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  syncCheck () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'r': +new Date(),\r\n        'sid': this.PROP.sid,\r\n        'uin': this.PROP.uin,\r\n        'skey': this.PROP.skey,\r\n        'deviceid': getDeviceID(),\r\n        'synckey': this.PROP.formatedSyncKey\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_synccheck,\r\n        params: params\r\n      }).then(res => {\r\n        let window = {\r\n          synccheck: {}\r\n        }\r\n\r\n        try {\r\n          // eslint-disable-next-line\r\n          eval(res.data)\r\n        } catch (ex) {\r\n          window.synccheck = { retcode: '0', selector: '0' }\r\n        }\r\n        if (window.synccheck.retcode == this.CONF.SYNCCHECK_RET_LOGOUT) {\r\n          throw new AlreadyLogoutError()\r\n        }\r\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\r\n        return window.synccheck.selector\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '同步失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sync () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'sid': this.PROP.sid,\r\n        'skey': this.PROP.skey,\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'SyncKey': this.PROP.syncKey,\r\n        'rr': ~new Date()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsync,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\r\n          throw new AlreadyLogoutError()\r\n        }\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        this.updateSyncKey(data)\r\n        this.PROP.skey = data.SKey || this.PROP.skey\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取新信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateSyncKey (data) {\r\n    if (data.SyncKey) {\r\n      this.PROP.syncKey = data.SyncKey\r\n    }\r\n    if (data.SyncCheckKey) {\r\n      let synckeylist = []\r\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\r\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\r\n      }\r\n      this.PROP.formatedSyncKey = synckeylist.join('|')\r\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\r\n      let synckeylist = []\r\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\r\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\r\n      }\r\n      this.PROP.formatedSyncKey = synckeylist.join('|')\r\n    }\r\n  }\r\n\r\n  logout () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        redirect: 1,\r\n        type: 0,\r\n        skey: this.PROP.skey,\r\n        lang: 'zh_CN'\r\n      }\r\n\r\n      // data加上会出错，不加data也能登出\r\n      // let data = {\r\n      //   sid: this.PROP.sid,\r\n      //   uin: this.PROP.uin\r\n      // }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxlogout,\r\n        params: params\r\n      }).then(res => {\r\n        return '登出成功'\r\n      }).catch(err => {\r\n        debug(err)\r\n        return '可能登出成功'\r\n      })\r\n    })\r\n  }\r\n\r\n  sendText (msg, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_TEXT,\r\n          'Content': msg,\r\n          'FromUserName': this.user['UserName'],\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送文本信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendEmoticon (id, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'fun': 'sys',\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_EMOTICON,\r\n          'EmojiFlag': 2,\r\n          'FromUserName': this.user['UserName'],\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n\r\n      if (id.indexOf('@') === 0) {\r\n        data.Msg.MediaId = id\r\n      } else {\r\n        data.Msg.EMoticonMd5 = id\r\n      }\r\n\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendemoticon,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送表情信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // file: Stream, Buffer, File, Blob\r\n  uploadMedia (file, filename, toUserName) {\r\n    return Promise.resolve().then(() => {\r\n      let name, type, size, ext, mediatype, data\r\n      return new Promise((resolve, reject) => {\r\n        if ((typeof (File) !== 'undefined' && file.constructor == File) ||\r\n          (typeof (Blob) !== 'undefined' && file.constructor == Blob)) {\r\n          name = file.name || 'file'\r\n          type = file.type\r\n          size = file.size\r\n          data = file\r\n          return resolve()\r\n        } else if (Buffer.isBuffer(file)) {\r\n          if (!filename) {\r\n            return reject(new Error('文件名未知'))\r\n          }\r\n          name = filename\r\n          type = mime.lookup(name)\r\n          size = file.length\r\n          data = file\r\n          return resolve()\r\n        } else if (file.readable) {\r\n          if (!file.path && !filename) {\r\n            return reject(new Error('文件名未知'))\r\n          }\r\n          name = path.basename(file.path || filename)\r\n          type = mime.lookup(name)\r\n          file.pipe(bl((err, buffer) => {\r\n            if (err) {\r\n              return reject(err)\r\n            }\r\n            size = buffer.length\r\n            data = buffer\r\n            return resolve()\r\n          }))\r\n        }\r\n      }).then(() => {\r\n        ext = name.match(/.*\\.(.*)/)\r\n        if (ext) {\r\n          ext = ext[1].toLowerCase()\r\n        } else {\r\n          ext = ''\r\n        }\r\n\r\n        switch (ext) {\r\n          case 'bmp':\r\n          case 'jpeg':\r\n          case 'jpg':\r\n          case 'png':\r\n            mediatype = 'pic'\r\n            break\r\n          case 'mp4':\r\n            mediatype = 'video'\r\n            break\r\n          default:\r\n            mediatype = 'doc'\r\n        }\r\n\r\n        let clientMsgId = getClientMsgId()\r\n\r\n        let uploadMediaRequest = JSON.stringify({\r\n          BaseRequest: this.getBaseRequest(),\r\n          ClientMediaId: clientMsgId,\r\n          TotalLen: size,\r\n          StartPos: 0,\r\n          DataLen: size,\r\n          MediaType: 4,\r\n          UploadType: 2,\r\n          FromUserName: this.user.UserName,\r\n          ToUserName: toUserName || this.user.UserName\r\n        })\r\n\r\n        let form = new FormData()\r\n        form.append('name', name)\r\n        form.append('type', type)\r\n        form.append('lastModifiedDate', new Date().toGMTString())\r\n        form.append('size', size)\r\n        form.append('mediatype', mediatype)\r\n        form.append('uploadmediarequest', uploadMediaRequest)\r\n        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\r\n        form.append('pass_ticket', encodeURI(this.PROP.passTicket))\r\n        form.append('filename', data, {\r\n          filename: name,\r\n          contentType: type,\r\n          knownLength: size\r\n        })\r\n        return new Promise((resolve, reject) => {\r\n          if (isStandardBrowserEnv) {\r\n            return resolve({\r\n              data: form,\r\n              headers: {}\r\n            })\r\n          } else {\r\n            form.pipe(bl((err, buffer) => {\r\n              if (err) {\r\n                return reject(err)\r\n              }\r\n              return resolve({\r\n                data: buffer,\r\n                headers: form.getHeaders()\r\n              })\r\n            }))\r\n          }\r\n        })\r\n      }).then(data => {\r\n        let params = {\r\n          f: 'json'\r\n        }\r\n\r\n        return this.request({\r\n          method: 'POST',\r\n          url: this.CONF.API_webwxuploadmedia,\r\n          headers: data.headers,\r\n          params: params,\r\n          data: data.data\r\n        })\r\n      }).then(res => {\r\n        let data = res.data\r\n        let mediaId = data.MediaId\r\n        assert.ok(mediaId, res)\r\n\r\n        return {\r\n          name: name,\r\n          size: size,\r\n          ext: ext,\r\n          mediatype: mediatype,\r\n          mediaId: mediaId\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '上传媒体文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendPic (mediaId, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_IMAGE,\r\n          'MediaId': mediaId,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsgimg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送图片失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendVideo (mediaId, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_VIDEO,\r\n          'MediaId': mediaId,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsgvedio,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送视频失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendDoc (mediaId, name, size, ext, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\r\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendappmsg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  forwardMsg (msg, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 2,\r\n        'Msg': {\r\n          'Type': msg.MsgType,\r\n          'MediaId': '',\r\n          'Content': msg.Content.replace(/&lt;/g, '<').replace(/&gt;/g, '>'),\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      let url, pm\r\n      switch (msg.MsgType) {\r\n        case this.CONF.MSGTYPE_TEXT:\r\n          url = this.CONF.API_webwxsendmsg\r\n          if (msg.SubMsgType === this.CONF.MSGTYPE_LOCATION) {\r\n            data.Msg.Type = this.CONF.MSGTYPE_LOCATION\r\n            data.Msg.Content = msg.OriContent.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\r\n          }\r\n          break\r\n        case this.CONF.MSGTYPE_IMAGE:\r\n          url = this.CONF.API_webwxsendmsgimg\r\n          break\r\n        case this.CONF.MSGTYPE_EMOTICON:\r\n          url = this.CONF.API_webwxsendemoticon\r\n          params.fun = 'sys'\r\n          data.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, '$1')\r\n          if (!data.Msg.EMoticonMd5) {\r\n            throw new Error('商店表情不能转发')\r\n          }\r\n          data.Msg.EmojiFlag = 2\r\n          data.Scene = 0\r\n          delete data.Msg.MediaId\r\n          delete data.Msg.Content\r\n          break\r\n        case this.CONF.MSGTYPE_MICROVIDEO:\r\n        case this.CONF.MSGTYPE_VIDEO:\r\n          url = this.CONF.API_webwxsendmsgvedio\r\n          data.Msg.Type = this.CONF.MSGTYPE_VIDEO\r\n          break\r\n        case this.CONF.MSGTYPE_APP:\r\n          url = this.CONF.API_webwxsendappmsg\r\n          data.Msg.Type = msg.AppMsgType\r\n          data.Msg.Content = data.Msg.Content.replace(\r\n            /^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\r\n            `$1${msg.MediaId}$2`)\r\n          break\r\n        default:\r\n          throw new Error('该消息类型不能直接转发')\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: url,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '转发消息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getMsgImg (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey,\r\n        type: 'big'\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetmsgimg,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取图片或表情失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getVideo (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetvideo,\r\n        headers: {\r\n          'Range': 'bytes=0-'\r\n        },\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取视频失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getVoice (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetvoice,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取声音失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getHeadImg (HeadImgUrl) {\r\n    return Promise.resolve().then(() => {\r\n      let url = this.CONF.origin + HeadImgUrl\r\n      return this.request({\r\n        method: 'GET',\r\n        url: url,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取头像失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getDoc (FromUserName, MediaId, FileName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        sender: FromUserName,\r\n        mediaid: MediaId,\r\n        filename: FileName,\r\n        fromuser: this.user.UserName,\r\n        pass_ticket: this.PROP.passTicket,\r\n        webwx_data_ticket: this.PROP.webwxDataTicket\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxdownloadmedia,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  verifyUser (UserName, Ticket) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Opcode': 3,\r\n        'VerifyUserListSize': 1,\r\n        'VerifyUserList': [{\r\n          'Value': UserName,\r\n          'VerifyUserTicket': Ticket\r\n        }],\r\n        'VerifyContent': '',\r\n        'SceneListCount': 1,\r\n        'SceneList': [33],\r\n        'skey': this.PROP.skey\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxverifyuser,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '通过好友请求失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 添加好友\r\n   * @param UserName 待添加用户的UserName\r\n   * @param content\r\n   * @returns {Promise.<TResult>}\r\n   */\r\n  addFriend (UserName, content = '我是' + this.user.NickName) {\r\n    let params = {\r\n      'pass_ticket': this.PROP.passTicket,\r\n      'lang': 'zh_CN'\r\n    }\r\n\r\n    let data = {\r\n      'BaseRequest': this.getBaseRequest(),\r\n      'Opcode': 2,\r\n      'VerifyUserListSize': 1,\r\n      'VerifyUserList': [{\r\n        'Value': UserName,\r\n        'VerifyUserTicket': ''\r\n      }],\r\n      'VerifyContent': content,\r\n      'SceneListCount': 1,\r\n      'SceneList': [33],\r\n      'skey': this.PROP.skey\r\n    }\r\n\r\n    return this.request({\r\n      method: 'POST',\r\n      url: this.CONF.API_webwxverifyuser,\r\n      params: params,\r\n      data: data\r\n    }).then(res => {\r\n      let data = res.data\r\n      assert.equal(data.BaseResponse.Ret, 0, res)\r\n      return data\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '添加好友失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // Topic: Chatroom name\r\n  // MemberList format:\r\n  // [\r\n  //   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\r\n  //   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\r\n  // ]\r\n  createChatroom (Topic, MemberList) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN',\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        MemberCount: MemberList.length,\r\n        MemberList: MemberList,\r\n        Topic: Topic\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxcreatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '创建群失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // fun: 'addmember' or 'delmember' or 'invitemember'\r\n  updateChatroom (ChatRoomUserName, MemberList, fun) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        fun: fun\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        ChatRoomName: ChatRoomUserName\r\n      }\r\n      if (fun === 'addmember') {\r\n        data.AddMemberList = MemberList.toString()\r\n      } else if (fun === 'delmember') {\r\n        data.DelMemberList = MemberList.toString()\r\n      } else if (fun === 'invitemember') {\r\n        data.InviteMemberList = MemberList.toString()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxupdatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '邀请或踢出群成员失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // OP: 1 联系人置顶 0 取消置顶\r\n  // 若不传RemarkName，则会覆盖以设置的联系人备注名\r\n  opLog (UserName, OP, RemarkName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        CmdId: 3,\r\n        OP: OP,\r\n        RemarkName: RemarkName,\r\n        UserName: UserName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxoplog,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '置顶或取消置顶失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateRemarkName (UserName, RemarkName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        CmdId: 2,\r\n        RemarkName: RemarkName,\r\n        UserName: UserName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxoplog,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '设置用户标签失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateChatRoomName (ChatRoomUserName, NewName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'fun': 'modtopic'\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        ChatRoomName: ChatRoomUserName,\r\n        NewTopic: NewName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxupdatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      throw new Error('更新群名失败')\r\n    })\r\n  }\r\n\r\n  revokeMsg (msgId, toUserName) {\r\n    return Promise.resolve().then(() => {\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        SvrMsgId: msgId,\r\n        ToUserName: toUserName,\r\n        ClientMsgId: getClientMsgId()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxrevokemsg,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      throw new Error('撤回消息失败')\r\n    })\r\n  }\r\n\r\n  getBaseRequest () {\r\n    return {\r\n      Uin: parseInt(this.PROP.uin),\r\n      Sid: this.PROP.sid,\r\n      Skey: this.PROP.skey,\r\n      DeviceID: getDeviceID()\r\n    }\r\n  }\r\n}\r\n"]}